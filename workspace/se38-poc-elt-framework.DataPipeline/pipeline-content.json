{
  "properties": {
    "activities": [
      {
        "name": "SE38_Ingest_Definition",
        "type": "Copy",
        "dependsOn": [],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "source": {
            "type": "AzureSqlSource",
            "sqlReaderQuery": "select 'se38' as [SourceSystemName], t.name as [StreamName], 'RogueHire Coaching Data' as [SourceSystemDescription], 'Azure SQL' as [Backend], (s.name + '.' + t.name) as [EntityName], c.name as [DeltaName], (CASE WHEN c.name is not null THEN cast('2013-01-01' as datetime) ELSE cast('1900-01-01' as datetime) END) as [LastDeltaDate], (CASE WHEN c.name is not null THEN 129600 ELSE NULL END) as [MaxIntervalMinutes], 'Files' as [DestinationRawFileSystem], 'raw_bronze/se38/' + s.name + '/' + t.name + '/YYYY-MM' as [DestinationRawFolder], s.name + '_' + t.name + '_' + 'YYYY-MM-DD_HHMISS.parquet' as [DestinationRawFile], 3 as [MaxRetries], cast(1 as bit) as [ActiveFlag], cast(1 as bit) as [L1TransformationReqdFlag], cast(1 as bit) as [L2TransformationReqdFlag], cast(0 as bit) as [DelayL1TransformationFlag] from sys.tables as t inner join sys.schemas as s on s.schema_id = t.schema_id and (s.name IN ('KeyWords','Master_Requisitions','Master_Applications','Scorecard','vw_Org_DepartmentName','vw_SourceFiles','vw_Organizations','vw_Recruiters') OR (s.name like 'vw__Org__Job%' or s.name like 'Job__Families__Map%')) left join sys.columns as c on c.object_id = t.object_id and c.name='LastEditedWhen'",
            "queryTimeout": "02:00:00",
            "partitionOption": "None",
            "datasetSettings": {
              "annotations": [],
              "type": "AzureSqlTable",
              "schema": [],
              "typeProperties": {
                "database": "rsse38db"
              },
              "externalReferences": {
                "connection": "307dc834-095e-45ac-87c9-44b138a79a17"
              }
            }
          },
          "sink": {
            "type": "AzureSqlSink",
            "writeBehavior": "upsert",
            "upsertSettings": {
              "useTempDB": true,
              "keys": [
                "SourceSystemName",
                "StreamName"
              ]
            },
            "sqlWriterUseTableLock": false,
            "disableMetricsCollection": false,
            "datasetSettings": {
              "annotations": [],
              "type": "AzureSqlTable",
              "schema": [],
              "typeProperties": {
                "schema": "ELT",
                "table": "IngestDefinition",
                "database": "controlDB"
              },
              "externalReferences": {
                "connection": "23d6a00f-56db-4cab-b89b-3cd6cd6964e9"
              }
            }
          },
          "enableStaging": false,
          "translator": {
            "type": "TabularTranslator",
            "mappings": [
              {
                "source": {
                  "name": "SourceSystemName",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "3"
                },
                "sink": {
                  "name": "SourceSystemName",
                  "physicalType": "varchar",
                  "length": "50"
                }
              },
              {
                "source": {
                  "name": "StreamName",
                  "type": "String",
                  "physicalType": "nvarchar",
                  "length": "128"
                },
                "sink": {
                  "name": "StreamName",
                  "physicalType": "varchar",
                  "length": "100"
                }
              },
              {
                "source": {
                  "name": "SourceSystemDescription",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "20"
                },
                "sink": {
                  "name": "SourceSystemDescription",
                  "physicalType": "varchar",
                  "length": "200"
                }
              },
              {
                "source": {
                  "name": "Backend",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "9"
                },
                "sink": {
                  "name": "Backend",
                  "physicalType": "varchar",
                  "length": "30"
                }
              },
              {
                "source": {
                  "name": "EntityName",
                  "type": "String",
                  "physicalType": "nvarchar",
                  "length": "257"
                },
                "sink": {
                  "name": "EntityName",
                  "physicalType": "varchar",
                  "length": "100"
                }
              },
              {
                "source": {
                  "name": "DeltaName",
                  "type": "String",
                  "physicalType": "nvarchar",
                  "length": "128"
                },
                "sink": {
                  "name": "WatermarkColName",
                  "physicalType": "varchar",
                  "length": "50"
                }
              },
              {
                "source": {
                  "name": "LastDeltaDate",
                  "type": "DateTime",
                  "physicalType": "datetime"
                },
                "sink": {
                  "name": "LastDeltaDate",
                  "physicalType": "datetime2",
                  "precision": 7
                }
              },
              {
                "source": {
                  "name": "MaxIntervalMinutes",
                  "type": "Int32",
                  "physicalType": "int"
                },
                "sink": {
                  "name": "MaxIntervalMinutes",
                  "physicalType": "int"
                }
              },
              {
                "source": {
                  "name": "DestinationRawFileSystem",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "5"
                },
                "sink": {
                  "name": "DestinationRawFileSystem",
                  "physicalType": "varchar",
                  "length": "50"
                }
              },
              {
                "source": {
                  "name": "DestinationRawFolder",
                  "type": "String",
                  "physicalType": "nvarchar",
                  "length": "280"
                },
                "sink": {
                  "name": "DestinationRawFolder",
                  "physicalType": "varchar",
                  "length": "200"
                }
              },
              {
                "source": {
                  "name": "DestinationRawFile",
                  "type": "String",
                  "physicalType": "nvarchar",
                  "length": "283"
                },
                "sink": {
                  "name": "DestinationRawFile",
                  "physicalType": "varchar",
                  "length": "200"
                }
              },
              {
                "source": {
                  "name": "MaxRetries",
                  "type": "Int32",
                  "physicalType": "int"
                },
                "sink": {
                  "name": "MaxRetries",
                  "physicalType": "int"
                }
              },
              {
                "source": {
                  "name": "ActiveFlag",
                  "type": "Boolean",
                  "physicalType": "bit"
                },
                "sink": {
                  "name": "ActiveFlag",
                  "physicalType": "bit"
                }
              },
              {
                "source": {
                  "name": "L1TransformationReqdFlag",
                  "type": "Boolean",
                  "physicalType": "bit"
                },
                "sink": {
                  "name": "L1TransformationReqdFlag",
                  "physicalType": "bit"
                }
              },
              {
                "source": {
                  "name": "L2TransformationReqdFlag",
                  "type": "Boolean",
                  "physicalType": "bit"
                },
                "sink": {
                  "name": "L2TransformationReqdFlag",
                  "physicalType": "bit"
                }
              },
              {
                "source": {
                  "name": "DelayL1TransformationFlag",
                  "type": "Boolean",
                  "physicalType": "bit"
                },
                "sink": {
                  "name": "DelayL1TransformationFlag",
                  "physicalType": "bit"
                }
              }
            ],
            "typeConversion": true,
            "typeConversionSettings": {
              "allowDataTruncation": true,
              "treatBooleanAsNumber": false
            }
          }
        }
      },
      {
        "name": "SE38_L1T_Definition",
        "type": "Copy",
        "dependsOn": [
          {
            "activity": "SE38_Ingest_Definition",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "source": {
            "type": "AzureSqlSource",
            "sqlReaderQuery": "select i.IngestID, 'L1Transform-Generic-Fabric' as [NotebookName], i.DestinationRawFileSystem as [InputRawFileSystem], i.DestinationRawFolder as [InputRawFileFolder], i.DestinationRawFile as [InputRawFile], 'Not Applicable' as [OutputL1CurateFileSystem], 'Not Applicable' as [OutputL1CuratedFolder], 'Not Applicable' as [OutputL1CuratedFile], i.WatermarkColName, 'silver.' + replace(lower(i.EntityName),'.','_') as [OutputDWTable], 'overwrite' as [OutputDWTableWriteMode], 3 as [MaxRetries], cast(1 as bit) as [ActiveFlag] from elt.IngestDefinition as i where i.SourceSystemName='SE38'",
            "queryTimeout": "02:00:00",
            "partitionOption": "None",
            "datasetSettings": {
              "annotations": [],
              "type": "AzureSqlTable",
              "schema": [],
              "typeProperties": {
                "database": "controlDB"
              },
              "externalReferences": {
                "connection": "23d6a00f-56db-4cab-b89b-3cd6cd6964e9"
              }
            }
          },
          "sink": {
            "type": "AzureSqlSink",
            "writeBehavior": "upsert",
            "upsertSettings": {
              "useTempDB": true,
              "keys": [
                "InputRawFileSystem",
                "InputRawFileFolder",
                "InputRawFile",
                "OutputDWTable"
              ]
            },
            "sqlWriterUseTableLock": false,
            "disableMetricsCollection": false,
            "datasetSettings": {
              "annotations": [],
              "type": "AzureSqlTable",
              "schema": [],
              "typeProperties": {
                "schema": "ELT",
                "table": "L1TransformDefinition",
                "database": "controlDB"
              },
              "externalReferences": {
                "connection": "23d6a00f-56db-4cab-b89b-3cd6cd6964e9"
              }
            }
          },
          "enableStaging": false,
          "translator": {
            "type": "TabularTranslator",
            "mappings": [
              {
                "source": {
                  "name": "IngestID",
                  "type": "Int32",
                  "physicalType": "int"
                },
                "sink": {
                  "name": "IngestID",
                  "physicalType": "int"
                }
              },
              {
                "source": {
                  "name": "NotebookName",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "26"
                },
                "sink": {
                  "name": "ComputeName",
                  "physicalType": "varchar",
                  "length": "100"
                }
              },
              {
                "source": {
                  "name": "InputRawFileSystem",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "50"
                },
                "sink": {
                  "name": "InputRawFileSystem",
                  "physicalType": "varchar",
                  "length": "50"
                }
              },
              {
                "source": {
                  "name": "InputRawFileFolder",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "200"
                },
                "sink": {
                  "name": "InputRawFileFolder",
                  "physicalType": "varchar",
                  "length": "200"
                }
              },
              {
                "source": {
                  "name": "InputRawFile",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "200"
                },
                "sink": {
                  "name": "InputRawFile",
                  "physicalType": "varchar",
                  "length": "200"
                }
              },
              {
                "source": {
                  "name": "OutputL1CurateFileSystem",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "14"
                },
                "sink": {
                  "name": "OutputL1CurateFileSystem",
                  "physicalType": "varchar",
                  "length": "50"
                }
              },
              {
                "source": {
                  "name": "OutputL1CuratedFolder",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "14"
                },
                "sink": {
                  "name": "OutputL1CuratedFolder",
                  "physicalType": "varchar",
                  "length": "200"
                }
              },
              {
                "source": {
                  "name": "OutputL1CuratedFile",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "14"
                },
                "sink": {
                  "name": "OutputL1CuratedFile",
                  "physicalType": "varchar",
                  "length": "200"
                }
              },
              {
                "source": {
                  "name": "OutputDWTable",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "MAX"
                },
                "sink": {
                  "name": "OutputDWTable",
                  "physicalType": "varchar",
                  "length": "200"
                }
              },
              {
                "source": {
                  "name": "OutputDWTableWriteMode",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "9"
                },
                "sink": {
                  "name": "OutputDWTableWriteMode",
                  "physicalType": "varchar",
                  "length": "20"
                }
              },
              {
                "source": {
                  "name": "MaxRetries",
                  "type": "Int32",
                  "physicalType": "int"
                },
                "sink": {
                  "name": "MaxRetries",
                  "physicalType": "int"
                }
              },
              {
                "source": {
                  "name": "WatermarkColName",
                  "type": "String",
                  "physicalType": "varchar",
                  "length": "50"
                },
                "sink": {
                  "name": "WatermarkColName",
                  "physicalType": "varchar",
                  "length": "50"
                }
              },
              {
                "source": {
                  "name": "ActiveFlag",
                  "type": "Boolean",
                  "physicalType": "bit"
                },
                "sink": {
                  "name": "ActiveFlag",
                  "physicalType": "bit"
                }
              }
            ],
            "typeConversion": true,
            "typeConversionSettings": {
              "allowDataTruncation": true,
              "treatBooleanAsNumber": false
            }
          }
        }
      },
      {
        "name": "Get SE38 PK cols",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "SE38_L1T_Definition",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "source": {
            "type": "AzureSqlSource",
            "sqlReaderQuery": "SELECT lower(Tab.Table_Schema + '_' + Tab.Table_Name) as [OutputDWTable], STRING_AGG(Col.Column_Name,'|') as [LookupColumns], 'append' as [OutputDWTableWriteMode] from INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name AND Col.Table_Name = Tab.Table_Name AND Tab.Constraint_Type = 'PRIMARY KEY' GROUP BY lower(Tab.Table_Schema + '_' + Tab.Table_Name)",
            "queryTimeout": "02:00:00",
            "partitionOption": "None"
          },
          "firstRowOnly": false,
          "datasetSettings": {
            "annotations": [],
            "type": "AzureSqlTable",
            "schema": [],
            "typeProperties": {
              "database": "rsse38db"
            },
            "externalReferences": {
              "connection": "307dc834-095e-45ac-87c9-44b138a79a17"
            }
          }
        }
      },
      {
        "name": "ForEach PK",
        "type": "ForEach",
        "dependsOn": [
          {
            "activity": "Get SE38 PK cols",
            "dependencyConditions": [
              "Succeeded"
            ]
          },
          {
            "activity": "Update Notebook ID",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "typeProperties": {
          "items": {
            "value": "@activity('Get SE38 PK cols').output.value",
            "type": "Expression"
          },
          "isSequential": true,
          "activities": [
            {
              "name": "Update SE38 L1T",
              "type": "Script",
              "dependsOn": [],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "scripts": [
                  {
                    "parameters": [
                      {
                        "name": "lookupcolumns",
                        "type": "String",
                        "value": {
                          "value": "@item().LookupColumns",
                          "type": "Expression"
                        },
                        "direction": "Input"
                      },
                      {
                        "name": "writemode",
                        "type": "String",
                        "value": {
                          "value": "@item().OutputDWTableWriteMode",
                          "type": "Expression"
                        },
                        "direction": "Input"
                      },
                      {
                        "name": "dwtable",
                        "type": "String",
                        "value": {
                          "value": "@item().OutputDWTable",
                          "type": "Expression"
                        },
                        "direction": "Input"
                      }
                    ],
                    "type": "NonQuery",
                    "text": {
                      "value": "UPDATE [ELT].[L1TransformDefinition] SET LookupColumns = @lookupColumns, OutputDWTableWriteMode = @writemode WHERE [OutputDWTable]= 'silver.'+ @dwtable",
                      "type": "Expression"
                    }
                  }
                ],
                "database": "controlDB"
              },
              "externalReferences": {
                "connection": "23d6a00f-56db-4cab-b89b-3cd6cd6964e9"
              }
            }
          ]
        }
      },
      {
        "name": "Update Notebook ID",
        "type": "Script",
        "dependsOn": [
          {
            "activity": "SE38_L1T_Definition",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "scripts": [
            {
              "parameters": [
                {
                  "name": "L1TransformGenericFabric",
                  "type": "String",
                  "value": {
                    "value": "@variables('NotebookID_L1Transform-Generic-Fabric')",
                    "type": "Expression"
                  },
                  "direction": "Input"
                }
              ],
              "type": "NonQuery",
              "text": {
                "value": "Update [ELT].[L1TransformDefinition] Set ComputeName = @L1TransformGenericFabric where ComputeName ='L1Transform-Generic-Fabric'",
                "type": "Expression"
              }
            }
          ],
          "scriptBlockExecutionTimeout": "02:00:00",
          "database": "controlDB"
        },
        "externalReferences": {
          "connection": "23d6a00f-56db-4cab-b89b-3cd6cd6964e9"
        }
      },
      {
        "name": "Insert L2T_Definition",
        "type": "Script",
        "dependsOn": [
          {
            "activity": "ForEach PK",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "scripts": [
            {
              "parameters": [
                {
                  "name": "SourceSystem",
                  "type": "String",
                  "value": "SE38",
                  "direction": "Input"
                },
                {
                  "name": "StreamName",
                  "type": "String",
                  "value": null,
                  "direction": "Input"
                }
              ],
              "type": "NonQuery",
              "text": {
                "value": "update elt.IngestDefinition set L2TransformationReqdFlag=1 where SourceSystemName = @SourceSystem and StreamName in ('CustomerTransactions','Orders','PurchaseOrders') Insert into [ELT].[L2TransformDefinition] ([IngestID], [L1TransformID], [ComputeName], [InputType], [InputFileSystem], [InputFileFolder], [OutputL2CurateFileSystem], [OutputL2CuratedFolder], [OutputL2CuratedFile], [InputDWTable], [WatermarkColName], [OutputDWTable], [OutputDWTableWriteMode], [ActiveFlag]) Select i.IngestID, l1.L1TransformID, '[gold].['+ 'create_'+ lower(i.StreamName) + '_monthly_snapshot]' as [ComputeName], 'Curated' as [InputType], 'Tables' as [InputFileSystem], l1.OutputDWTable as [InputFileFolder], 'Tables' as [OutputL2CurateFileSystem], 'gold' as [OutputL2CuratedFolder], lower(i.StreamName + '_monthly_snapshot') as [OutputL2CuratedFile], l1.OutputDWTable as [InputDWTable], i.WatermarkColName, lower('[gold].['+ i.StreamName + '_monthly_snapshot]') as [OutputDWTable], 'append' as [OutputDWTableWriteMode], cast(1 as bit) as [ActiveFlag] from elt.IngestDefinition as i inner join elt.L1TransformDefinition as l1 on i.IngestID =l1.IngestID where l1.IngestID in (select IngestID from elt.IngestDefinition where SourceSystemName = @SourceSystem and StreamName like COALESCE(@StreamName,'%') and L2TransformationReqdFlag=1)",
                "type": "Expression"
              }
            }
          ],
          "scriptBlockExecutionTimeout": "02:00:00",
          "database": "controlDB"
        },
        "externalReferences": {
          "connection": "23d6a00f-56db-4cab-b89b-3cd6cd6964e9"
        }
      }
    ],
    "variables": {
      "NotebookID_L1Transform-Generic-Fabric": {
        "type": "String",
        "defaultValue": "3e035f81-2c25-416b-9009-b7ba22e444ab"
      }
    }
  }
}